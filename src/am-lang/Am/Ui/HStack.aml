
namespace Am.Ui 
{

    class HStack(var spacing: Short) : ViewGroup {
        import Am.Lang
        import Am.Collections

        override fun layoutChildren() {
            var x = 0S
            var y = 0S

            var width = this.innerWidth()
            var minWidth = this.innerMinWidth()

            var unusedWidth = Short.max(width - minWidth, 0S)
            var remainingWidth = unusedWidth

            var sumGrowX = this.sumGrowX()

            var innerHeight = this.innerHeight()

            each(this.children, c) {
                var cw = c.minWidth() + ((c.growX.toInt() * unusedWidth.toInt()) / sumGrowX.toInt()).toShort()
                c.layout(x, y, cw.toUShort(), innerHeight.toUShort())
                x = x + cw + this.spacing
            }
        }

        fun innerMinWidth(): Short {
            var w = 0S
            each(this.children, c) {
                if (w > 0S) {
                    w = w + this.spacing
                }
                w = w + c.minWidth()
            }
            return w
        }

        override fun minWidth(): Short {
            return this.innerMinWidth() + this.padding.left + this.padding.right + this.margin.left + this.margin.right + this.borderWidths.left + this.borderWidths.right
        }

        fun innerMinHeight(): Short {
            var minH = 0S
            each(this.children, c) {
                var cMinH = c.minHeight()
                if (cMinH > minH) {
                    minH = cMinH
                }
            }
            return minH
        }

        override fun minHeight(): Short {
            return this.innerMinHeight() + this.padding.top + this.padding.bottom + this.margin.top + this.margin.bottom + this.borderWidths.top + this.borderWidths.bottom
        }

        fun sumGrowX(): Short {
            var grow = 0S
            each(this.children, c) {
                grow = grow + c.growX.toShort()
            }
            if (grow == 0) {
                grow = 1S
            }
            return grow
        }

    }

/*
    class HStack : ViewGroup {
        import Am.Lang
        import Am.Collections

        override fun layoutChildren() {
            var x = 0S
            var y = 0S
            var width = this.width
            var childWidth = width / this.children.size.toUShort()

            each(this.children, c) {
                c.layout(x, y, childWidth, this.height)
                x = x + childWidth.toShort()
            }
        }

    }
*/

}

