
namespace Am.Ui 
{

    class Label(var text: String) : View {
        import Am.Lang

        var font: Font
        var backgroundPen: UByte = 0UB
        var textPen: UByte = 1UB

        fun getUsedFont(): Font {
            if (this.font != null) {
                return this.font
            }
            var vc = this.getViewContext() 
            if (vc != null) {
                return vc.getWindow().font
            }
            return null
        }

        override fun minHeight(): Short {
            var font = this.getUsedFont()
            if (font != null) {
                return font.size.toShort()
            }
            var vc = this.getViewContext()  
            if (vc != null) {
                "vc is null".println()
                var win = vc.getWindow()
                var fontSize = win.getCurrentFontSize()
                return fontSize.toShort()
//                return vc.getWindow().getCurrentFontSize().toShort()
            }
            return 0S
        }

        override fun minWidth(): Short {
            var font = this.getUsedFont()
//            ("text width: " + this.getViewContext() .getWindow().calculateStringWidth(font, this.text).toString()).println()

            return this.getViewContext() .getWindow().calculateStringWidth(font, this.text).toShort()
        }

        override fun paint(graphics: Graphics) {
            base.paint(graphics)

            var x1 = 0S
            var y1 = 0S

            graphics.setBackgroundPen(this.backgroundPen)
            graphics.setForegroundPen(this.textPen)
            var font = this.getUsedFont()
            if (font != null) {
                graphics.setFont(font)
            }

            graphics.drawString(this.text, x1, y1)
        }
    }


}

