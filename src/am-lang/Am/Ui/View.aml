
namespace Am.Ui 
{
    interface Graphics {

    }

    native class ViewContext {
        // Keep information about Window/Screen/Gadget Context etc.
    }

    class View {
        import Am.Lang
        private var viewContext: ViewContext

        fun getViewContext(): ViewContext {
            return this.viewContext
        }

        fun onAttach(viewContext: ViewContext) {
            if (this.viewContext != null) {
                throw new Exception("View already attached")
            }
            this.viewContext = viewContext
        }

        fun onDetach() {
            this.viewContext = null
        }

        fun paint(graphics: Graphics) {

        }
    }

    class ViewGroup : View {
        import Am.Lang
        import Am.Collections

        private var children: List<View> = List<View>.newList<View>()
        
        fun getChildren() {
            return this.children
        }

        fun paintChildren(graphics: Graphics) {
            var i = 0
            var cl = this.children
            while(i < cl.size) {
                var c = cl.get(i)
                c.paint(graphics)
                i++
            }
        }

        override fun paint(graphics: Graphics) {
            base.paint(graphics)
        }

        fun layoutChildren() {

        }
    }

    class Font(private var name: String) {
        import Am.Lang

        fun getName(): String {
            return this.name
        }
    }

    class GadgetView : View {
        var font: Font

        import Am.Lang

    }

    native class Button : GadgetView {
        import Am.Lang
    }
}

