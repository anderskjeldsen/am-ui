
namespace Am.Ui 
{

    enum MyEnum<Int> {
        import Am.Lang
        val1 = 1
        val2 = 2
    }

    class MyBase() {
        import Am.Lang

        override fun toString(): String {
            return "base"
        }
    }

    class MyChild() : MyBase {
        import Am.Lang

        override fun toString(): String {
            return "child"
        }

        fun toStringBase(): String {
            return base.toString()
        }
    }

    class Startup {
        import Am.Lang
        import Am.Threading

        static var xxx: Int = 1

        static fun main() {
            var w = Window.openWindow(20S, 20S, 150US, 150US, null, null)


            var vStack = new VStack(5S)
            vStack.setPadding(5S)

            vStack.addChild(new TestButton("Add label", (v) => {
                "add label".println()
                vStack.addChild(new Label("Another label"))
                var w2 = w
                w2.layout()
                w2.requestRefresh()
                w2.attemptRefresh()
            }).setup((v) => {
                "setup".println()
                v.growX = 255UB
                v.growY = 128UB
            }))
            vStack.addChild(new Label("Hello Amiga").setup((l) => {

            }))
            vStack.addChild(new TestButton("Remove last label", (v) => {
                "remove last label".println()
            }).setup((v) => {
                v.growX = 255UB
                v.growY = 128UB
                v.setPadding(5S)
            }))

            w.setRootView(vStack)

            w.layout()
            w.requestRefresh()
            w.attemptRefresh()

            while(w.isOpen()) {
                w.handleInput()
            }
            vStack.removeChildren() // Because the onClick callback of TestButton refers to vStack TODO: turn them into Weak's ?
        }
    }
}

