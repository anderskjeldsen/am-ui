
namespace Am.Ui 
{

    enum MyEnum<Int> {
        import Am.Lang
        val1 = 1
        val2 = 2
    }

    class MyBase() {
        import Am.Lang

        override fun toString(): String {
            return "base"
        }
    }

    class MyChild() : MyBase {
        import Am.Lang

        override fun toString(): String {
            return "child"
        }

        fun toStringBase(): String {
            return base.toString()
        }
    }

    class Startup {
        import Am.Lang
        import Am.Threading

        static var xxx: Int = 1

        static fun main() {

            "Ui started".println()
            var w = Window.openWindow(20S, 20S, 150US, 150US, null)

            var vStack = new VStack()

            var hStack = new HStack()
            hStack.addChild(new TestButton())
            hStack.addChild(new TestButton())
            hStack.addChild(new TestButton())

            vStack.addChild(hStack)
            vStack.addChild(new TestButton())
            vStack.addChild(new TestButton())
            w.setRootView(vStack)

/*            var b = new TestButton()
            "button created".println()
            w.setRootView(b)
            */
            w.layout()
            w.requestRefresh()
            w.attemptRefresh()

            while(w.isOpen()) {
                w.handleInput()
            }
        }
    }
}

